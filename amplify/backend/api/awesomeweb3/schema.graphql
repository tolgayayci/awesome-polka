enum UserType {
  PROJECT_OWNER
  ADMIN
}

enum UserStatus {
  APPROVED
  NOT_APPROVED
  BLOCKED
}

type User @model @auth(rules: [{ allow: custom }]) {
  walletAddress: String! @primaryKey
  nonce: String!
  username: String!
  type: UserType!
  status: UserStatus!
  project: [Project] @hasMany(indexName: "byUser", fields: ["walletAddress"])
}

type Project @model @auth(rules: [{ allow: custom }]) {
  slug: String! @primaryKey
  name: String!
  bio: String!
  categories: [Category] @manyToMany(relationName: "ProjectCategories")
  socials: [AWSJSON]
  description: String
  githubRepoUrl: AWSURL
  tokenSymbol: AWSURL
  openJobs: [AWSJSON]
  team: [AWSJSON]
  faq: [AWSJSON!]
  articles: [Article] @hasMany(indexName: "byProject", fields: ["slug"])
  user: User @belongsTo(fields: ["userWalletAddress"])
  userWalletAddress: String! @index(name: "byUser")
}

type Article @model @auth(rules: [{ allow: custom }]) {
  id: ID!
  title: String!
  description: String!
  body: String
  image: AWSURL!
  isExternal: Boolean!
  externalUrl: AWSURL
  project: Project @belongsTo(fields: ["projectSlug"])
  projectSlug: String! @index(name: "byProject")
}

type Category @model @auth(rules: [{ allow: custom }]) {
  id: ID!
  name: String!
  description: String
  projects: [Project] @manyToMany(relationName: "ProjectCategories")
}
